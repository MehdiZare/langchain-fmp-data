name: PR Labeler

on:
  pull_request:
    types: [opened, edited, synchronize]

jobs:
  label:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      
    steps:
      - name: Label PR based on title
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const title = pr.title.toLowerCase();
            const body = (pr.body || '').toLowerCase();
            const labels = [];
            
            // Check for version bump indicators
            if (title.includes('breaking') || title.includes('major') || body.includes('breaking change')) {
              labels.push('major');
            } else if (title.includes('feat') || title.includes('feature') || title.includes('add')) {
              labels.push('minor');
            } else if (title.includes('fix') || title.includes('bug') || title.includes('patch')) {
              labels.push('patch');
            } else if (title.includes('docs') || title.includes('chore') || title.includes('refactor')) {
              labels.push('patch');
            }
            
            // Add type labels
            if (title.includes('fix') || title.includes('bug')) {
              labels.push('bug');
            }
            if (title.includes('feat') || title.includes('feature')) {
              labels.push('enhancement');
            }
            if (title.includes('docs')) {
              labels.push('documentation');
            }
            if (title.includes('test')) {
              labels.push('testing');
            }
            if (title.includes('chore') || title.includes('ci') || title.includes('build')) {
              labels.push('maintenance');
            }
            
            // Only add labels if we found some
            if (labels.length > 0) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                labels: labels
              });
            }
            
            // Add comment about versioning
            const hasVersionLabel = labels.some(l => ['major', 'minor', 'patch'].includes(l));
            if (hasVersionLabel) {
              const comment = `🏷️ This PR has been labeled for version bumping: **${labels.find(l => ['major', 'minor', 'patch'].includes(l))}**\n\nWhen merged to main, the version will be automatically bumped and published to PyPI.`;
              
              // Check if we already commented
              const comments = await github.rest.issues.listComments({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number
              });
              
              const botComment = comments.data.find(c => 
                c.user.type === 'Bot' && c.body.includes('version bumping')
              );
              
              if (!botComment) {
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: pr.number,
                  body: comment
                });
              }
            }